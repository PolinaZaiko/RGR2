body {
    background-color: rgb(253, 250, 250);
    color: #000000;
  }
  
header {
    background-image: linear-gradient(to right, rgb(191, 255, 94), rgb(120, 241, 124));
    padding: 15px;
    color: rgb(242, 255, 184); 
    font-style: italic; 
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
    margin: 0px;
    font-size: 25px;
    font-family: Arial;
    text-align: center;

    z-index: 2;
  }

footer {
  background-image: linear-gradient(to right, rgb(191, 255, 94), rgb(120, 241, 124));
    color: rgb(1, 77, 230);
    padding: 15px; 
    font-size: 20pt; 
    font-style: arial; 
    text-align: right;
    position: fixed;
    bottom: 0;
    right: 0;
    left: 0;
 }  

 main {
    margin-top: 160px;
    margin-bottom: 60px;
    padding: 10px;
 }

 img {
  width: 400px;
  height: auto;
  margin: 0px 200px 20px 200px;
}

.error {
  color: red;
  font-size: 20px;
  font-weight: bold;
}

.current {
    display: inline-block;
    margin-right: 20px;
    color: white;
}

.current a {
  color: rgb(1, 77, 230);
  text-decoration: none;   
  text-shadow: 3px 3px 3px gray;
  font-weight: bold;
  margin-right: 30px;
  font-size: 30px;;
}

.current a:hover {
  color: rgb(237, 7, 87);
  font-size: 31px;
}

/* Свойство display: grid; превращает элемент с классом .row в грид-контейнер. 
Это означает, что все прямые дочерние элементы этого контейнера теперь будут 
автоматически размещаться внутри этой сетки. */

/* Свойство grid-template-columns: 1fr 1fr 1fr 1fr; определяет структуру колонок 
внутри грид-контейнера. В данном случае у нас будет 4 колонки равной ширины.  */

/* 1fr - это единица измерения в CSS Grid, которая означает "одна доля доступного 
пространства". Таким образом, если у нас есть 4 колонки по 1fr, каждая колонка 
займет одну четверть всего доступного пространства в грид-контейнере. */

.row {
  margin-left: 10px;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-column-gap: 10px; /* расстояние между колонками */
  grid-row-gap: 10px; /* расстояние между рядами */

}